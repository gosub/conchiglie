function every () {
    DELAY=${1}
    shift
    while :;
    do
        echo -n "start: "; date
        $@;
        echo -n "end: " ; date; echo
        sleep ${DELAY};
    done
}

function xsync () {
    DIR1=${1}
    DIR2=${2}
    rsync --progress --recursive --ignore-existing --size-only --whole-file ${DIR1} ${DIR2}
    rsync --progress --recursive --ignore-existing --size-only --whole-file ${DIR2} ${DIR1}
}

function imgurandom()
{
    cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 5 | head -n 1 | awk '{ print "http://i.imgur.com/" $1 ".jpg" }' | xargs display
}

function webm()
{
	ffmpeg -i $1 -c:v libvpx -b:v 1M -c:a libvorbis $1.webm
}

function ricorrenze () {
    tmux new -d -s ricorrenze

    tmux split-window -h -t ricorrenze -c "${HOME}/y/articles"
    tmux send "everyday ${HOME}/x/prj/2015/hoard/feed/feedhoarder.py" Enter

    tmux split-window -v -t ricorrenze -c "${HOME}/y/pics/tumblr" 
    tmux send "everyday python ~/x/prj/2015/hoard/tumblr/dump.py" Enter

    tmux select-pane -t ricorrenze.top-left
    tmux split-window -v -t ricorrenze -c "${HOME}/y/dumps/mu" 
    tmux send "everyhour ~/x/prj/2015/hoard/4chan/mu.py" Enter

    tmux select-pane -t ricorrenze.top-left

    tmux attach -t ricorrenze
}

function lsfun {
	declare -F | awk '{ print $3 }'
}

function stream {
    ffmpeg -re -i $(youtube-dl -g "${1}") -map 0:v -f v4l2 /dev/video0
}

function liquid {
    FILENAME=${1}
    NEWFILENAME=${FILENAME%.*}-liquid.${FILENAME#*.}
    SCALE=${2:-75}
    REVSCALE=$((10000/${SCALE}))
    PARAMS="-liquid-rescale ${SCALE}% -resize ${REVSCALE}%"
    convert "${FILENAME}" ${PARAMS} "${NEWFILENAME}"
}


##### GIT #####

function on-all-git-subdirs {
    find . -type d -name '.git' | while read dir ; do
        pushd $dir/../ > /dev/null
        $@
        popd > /dev/null
    done
}

function is-git-dirty {
    if [[ -n `git status -s` ]]; then
        echo "$PWD has uncommitted changes"
    else
        echo "$PWD is clean"
    fi
}

alias dirty='on-all-git-subdirs is-git-dirty'
alias pullall='on-all-git-subdirs git pull'


##### XORG #####

function xoff {
    sleep 0.2
    xset -display :0.0 dpms force off
}

function xswitch {
    xrandr --listactivemonitors | grep LVDS1 > /dev/null
    rc=$?; if [[ $rc != 0 ]]; then
        xrandr --output LVDS1 --auto --output VGA1 --off
    else
        xrandr --output LVDS1 --off --output VGA1 --auto
    fi
}


##### ALIASES #####

alias lsl='ls -lha'
alias functions='declare -f'
alias yargs='xargs -n 1 -d \\n -I {}'
alias incognito='chromium --incognito'
alias everyday='every 1d'
alias everyhour='every 1h'


##### PYTHON #####

function activate() {
    while [ $PWD != "/" ]; do
        if [ -d ".venv" ]; then
            source .venv/bin/activate
            break
        fi
        cd ..
    done
}


##### PDF #####

function pdfshrink {
    IN=${1}
    OUT=${1%.*}-resized.pdf
    OPTS="-sDEVICE=pdfwrite -sPAPERSIZE=a4 -dFIXEDMEDIA -dPDFFitPage -dCompatibilityLevel=1.4"
    gs -o "${OUT}" ${OPTS} "${IN}"
}

function unp7m {
    openssl smime -decrypt -in "${1}" -inform DER -verify -noverify -out "${1%.*}"
}


##### EMACS #####

function clip2org {
     URL=$(xclip -o)
     TITLE=`curl -s "$URL" | grep -iPo '(?<=<title>)(.*)(?=</title>)'`
     echo -n [[$URL][$TITLE]] | xclip -selection "clipboard"
     echo [[$URL][$TITLE]]
}


##### AUDIO #####

function wav2mp3 () {
    lame --resample 44.1 -q 0 --vbr-new -V 0 "$1" -o "${1%.*}.mp3";
}

function mp3-dl {
    youtube-dl -x --audio-format mp3 --audio-quality 0 "${1}"
}

function ilaria-tag {
    id3v2 --delete-all "$@"
    id3v2 --album "Ilaria" "$@"
}

function audiocd {
    mplayer cdda://${1}:1 -cache 1024
}
